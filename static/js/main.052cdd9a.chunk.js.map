{"version":3,"sources":["redux/slices/navigation.ts","constans/index.ts","redux/slices/search.ts","API/constants.ts","API/schedule.ts","API/user.ts","API/group.ts","API/index.ts","API/streams.ts","utils/currentWeek.ts","redux/slices/schedule.ts","utils/currentDay.ts","redux/slices/profile.ts","redux/rootReducer.ts","redux/store.ts","App.tsx","panels/Sleep/index.tsx","components/Switcher/index.tsx","index.tsx"],"names":["initialState","story","panels","schedule","profile","list","navigationSlice","createSlice","name","reducers","changeStory","state","action","payload","changePanel","panel","actions","searchSlice","query","loading","setQuery","setLoading","BASE_URL","process","requestSchedule","href","a","id","replace","url","fetch","res","json","requestUser","registerUser","opts","method","headers","addGroup","uid","group","body","JSON","stringify","delGroup","getStreams","currentWeek","now","Date","ms","getTime","d","getDay","week","weeks","filter","date","start","end","createAsyncThunk","thunkAPI","schedules","getState","find","s","uniq","API","data","activeMode","text","isDiff","day","currentDay","activeSubject","error","activeSchedule","history","scheduleSlice","changeMode","changeDay","changeWeek","setSubject","setIsDiff","popHistory","pop","length","newActiveHref","exams","clearHistory","extraReducers","builder","addCase","pending","meta","arg","add","push","rejected","fulfilled","requestStreams","user","profileSlice","loadingStreams","errorStreams","streams","userId","loadingUser","errorUser","myGroup","fromWhoms","rootReducer","combineReducers","navigation","search","store","configureStore","reducer","App","isWebView","activePanel","stretched","Sleep","icon","width","height","Switcher","hours","getUTCHours","bridge","send","subscribe","e","detail","type","document","setAttribute","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.052cdd9a.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\nimport { MAP_PANEL, PROFILE_PANEL, PROFILE_STORY, SCHEDULE_PANEL, SCHEDULE_STORY, SEARCH_PANEL, LIST_PANEL, LIST_STORY } from \"../../constans\"\n\ntype Story = typeof PROFILE_STORY | typeof SCHEDULE_STORY | typeof LIST_STORY\ntype ProfilePanel = typeof PROFILE_PANEL | typeof MAP_PANEL\ntype SchedulePanel = typeof SCHEDULE_PANEL | typeof SEARCH_PANEL\ntype ListPanel = typeof LIST_PANEL\ntype Panel = { schedule : SchedulePanel, profile : ProfilePanel, list : ListPanel }\n\ntype ChangePanelAction = { story : keyof Panel, panel : ProfilePanel | SchedulePanel }\n\ninterface NavigationState\n{\n  story : Story\n  panels : Panel\n}\n\nconst initialState : NavigationState = {\n  story : PROFILE_STORY,\n  panels : {\n    schedule : SEARCH_PANEL,\n    profile : PROFILE_PANEL,\n    list : LIST_PANEL,\n  },\n}\n\nconst navigationSlice = createSlice({\n  name : 'navigation',\n  initialState,\n  reducers : {\n    changeStory(state, action)\n    {\n      state.story = action.payload\n    },\n    changePanel(state, action : PayloadAction<ChangePanelAction>)\n    {\n      const { story, panel } = action.payload\n      if(story === 'schedule')\n        state.panels.schedule = panel as SchedulePanel\n      else if(story === 'profile')\n        state.panels.profile = panel as ProfilePanel\n    },\n  }\n})\n\nexport const { changeStory, changePanel } = navigationSlice.actions\nexport default navigationSlice.reducer","export const SCHEDULE_STORY = 'schedule'\nexport const PROFILE_STORY = 'profile'\nexport const LIST_STORY = 'list'\n\nexport const SEARCH_PANEL = 'search'\nexport const SCHEDULE_PANEL = 'schedule'\nexport const PROFILE_PANEL = 'profile'\nexport const MAP_PANEL = 'map'\nexport const LIST_PANEL = 'list'\n\nexport const COUNT_LAST_SCHEDULES = 6","import { createSlice } from \"@reduxjs/toolkit\"\n\ninterface SearchState\n{\n  query : string\n  loading : boolean\n}\n\nconst initialState : SearchState = {\n  query : '',\n  loading : false\n}\n\nconst searchSlice = createSlice({\n  name : 'search',\n  initialState,\n  reducers : {\n    setQuery(state, action)\n    {\n      state.query = action.payload\n    },\n    setLoading(state, action)\n    {\n      state.loading = action.payload\n    }\n  }\n})\n\nexport const { setQuery, setLoading } = searchSlice.actions\nexport default searchSlice.reducer","export const BASE_URL = process.env.REACT_APP_BASE_URL","import { BASE_URL } from \"./constants\"\n\nexport const requestSchedule = async (href : string) => {\n  const id = href.replace(/(\\?|&)/g,'').replace('=','/')\n  const url = `${BASE_URL}/schedule/${id}`\n  const res = await fetch(url)\n  \n  return res.json()\n}","import { BASE_URL } from \"./constants\"\n\nexport const requestUser = async (id : number) => {\n  const url = `${BASE_URL}/user/${id}`\n  const res = await fetch(url)\n\n  return res.json()\n}\n\nexport const registerUser = async (id : number) => {\n  const url = `${BASE_URL}/user/${id}`\n  const opts = {\n    method : 'POST', \n    headers : {'Content-Type': 'application/json;charset=utf-8'}\n  }\n  const res = await fetch(url, opts)\n\n  return res.json()\n}","import { BASE_URL } from \"./constants\"\n\nexport const addGroup = async ({uid, group} : {uid : number, group : string}) => {\n  const url = `${BASE_URL}/user/group`\n  const opts = {\n    method : 'PUT', \n    headers : {'Content-Type': 'application/json;charset=utf-8'},\n    body : JSON.stringify({uid, group})\n  }\n  const res = await fetch(url, opts)\n\n  return res.json()\n}\n\nexport const delGroup = async (uid : number) => {\n  const url = `${BASE_URL}/user/group`\n  const opts = {\n    method : 'DELETE', \n    headers : {'Content-Type': 'application/json;charset=utf-8'},\n    body : JSON.stringify({uid})\n  }\n  const res = await fetch(url, opts)\n\n  return res.json()\n}","import {requestSchedule} from './schedule'\nimport {registerUser,requestUser} from './user'\nimport {addGroup,delGroup} from './group'\nimport {getStreams} from './streams'\n\nexport default {\n  requestSchedule,\n  requestUser,\n  delGroup,\n  registerUser,\n  addGroup,\n  getStreams,\n}","import { BASE_URL } from \"./constants\"\n\nexport const getStreams = async () => {\n  const url = `${BASE_URL}/streams`\n  const res = await fetch(url)\n  return res.json()\n}","import weeks from '../data/weeks.json'\n\nimport { Week } from '../types/Week'\n\nexport const currentWeek = () : Week => {\n  const now = new Date()\n  const ms = now.getTime()\n  const d = now.getDay()\n\n  const week = weeks.filter(({date : [start, end]}) => start <= ms && ms <= end)[0].week\n\n  return (d !== 0 ? week : (week === 0 ? 1 : 0)) as Week\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport API from \"../../API\";\n\nimport { MenuItem } from '../../panels/Schedule'\nimport { Day } from \"../../types/Day\";\nimport { FromWhom } from \"../../types/ILesson\";\nimport { PlainLesson } from \"../../types/PlainLesson\";\nimport { Week } from \"../../types/Week\";\nimport { currentDay, currentWeek } from \"../../utils\";\nimport { RootState } from \"../rootReducer\";\n\ninterface Exam\n{\n  place: string\n  subject: string\n  type : 3 | 4\n  fromWhoms: FromWhom[]\n}\n\nexport interface ScheduleData\n{\n  title : string\n  href : string\n  schedule : PlainLesson[]\n  exams : Exam[]\n}\n\ninterface ScheduleState\n{\n  activeMode : MenuItem\n  isDiff : boolean\n  day : Day\n  week : Week\n  activeSubject : string | null\n  loading : boolean\n  error : boolean\n  activeSchedule : ScheduleData | null\n  schedules : ScheduleData[] // ??? ILesson[]\n  history : string[]\n}\n\ntype RequestScheduleParam = {href : string, add ?: boolean}\n\nexport const requestSchedule = createAsyncThunk(\n  'schedule/request',\n  async ({href} : RequestScheduleParam, thunkAPI) => {    \n    const schedules = (thunkAPI.getState() as RootState).schedule.schedules\n    const schedule = schedules.find(s => s.href === href.replace('&', ''))\n    \n    if(schedule) return { uniq : false, schedule}\n\n    const data = await API.requestSchedule(href)\n    return { uniq : true, schedule : data}\n  }\n)\n\nconst initialState : ScheduleState = {\n  activeMode : { text : 'По дням', id : 'byDays' },\n  isDiff : false,\n  day : currentDay(),\n  week : currentWeek(),\n  activeSubject : null,\n  loading : false,\n  error : false,\n  activeSchedule : null,\n  schedules : [],\n  history : [],\n}\n\nconst scheduleSlice = createSlice({\n  name : 'schedule',\n  initialState,\n  reducers : {\n    changeMode(state, action : PayloadAction<MenuItem>)\n    {\n      state.activeMode = action.payload\n    },\n    changeDay(state, action : PayloadAction<Day>)\n    {\n      state.day = action.payload\n    },\n    changeWeek(state, action : PayloadAction<Week>)\n    {\n      state.week = action.payload\n    },\n    setSubject(state, action)\n    {\n      state.activeSubject = action.payload\n    },\n    setIsDiff(state, action)\n    {\n      state.isDiff = action.payload\n    },\n    popHistory(state)\n    {\n      state.isDiff = false\n      state.history.pop()\n      if(state.history.length !== 0)\n      {\n        const newActiveHref = state.history[state.history.length - 1]\n        const schedule = state.schedules.find(s => s.href === newActiveHref) as ScheduleData\n        \n        if(!schedule.exams && state.activeMode.id === 'exams')\n          state.activeMode = initialState.activeMode\n\n        state.activeSchedule = schedule\n      }\n    },\n    clearHistory(state)\n    {\n      state.history = []\n      state.isDiff = false\n    }\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestSchedule.pending,(state, action) => {\n        state.loading = true\n        state.error = false\n        state.activeSchedule = null\n        \n        const { add = true, href } = action.meta.arg\n        if(add)\n          state.history.push(href.replace('&', ''))\n      })\n      .addCase(requestSchedule.rejected,(state) => {\n        state.loading = false\n        state.error = true\n        state.isDiff = false\n      })\n      .addCase(requestSchedule.fulfilled,(state, action) => {\n        state.loading = false\n        state.error = false\n        const {uniq, schedule} = action.payload\n        state.activeSchedule = schedule as ScheduleData\n        if(uniq)\n          state.schedules.push(schedule)\n\n        if(!schedule.exams && state.activeMode.id === 'exams')\n          state.activeMode = initialState.activeMode\n      })\n  },\n})\n\nexport const { changeMode, changeDay, changeWeek, setSubject, popHistory, setIsDiff, clearHistory } = scheduleSlice.actions\nexport default scheduleSlice.reducer","import { Day } from \"../types/Day\"\n\nexport const currentDay = () : Day => {\n  const id = new Date().getDay()\n\n  return (id > 0 ? id - 1 : id) as Day\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { FromWhom } from \"../../types/ILesson\";\nimport API from '../../API'\nimport { ScheduleData } from \"./schedule\";\n\ninterface User\n{\n  id : number\n  group : string\n  myGroup : ScheduleData | null\n  fromWhoms : FromWhom[]  \n}\n\ninterface ProfileState\n{\n  loadingStreams : boolean\n  errorStreams : boolean\n  streams : FromWhom[]\n\n  user : User | null\n  userId : number | null\n  loadingUser : boolean\n  errorUser : boolean\n}\n\nexport const requestStreams = createAsyncThunk(\n  'streams/request', API.getStreams\n)\n\nexport const requestUser = createAsyncThunk(\n  'user/request',\n  async (id : number) => {\n    const user = await API.requestUser(id)\n    if(user) return user\n\n    const res = await API.registerUser(id)\n\n    return res\n  }\n)\n\nexport const addGroup = createAsyncThunk(\n  'group/add',\n  async ({uid, group} : {uid : number, group : string}) => {\n    const data = await API.addGroup({uid, group})\n\n    return data\n  }\n)\n\nexport const delGroup = createAsyncThunk(\n  'group/del',\n  async (id : number) => {\n    const data = await API.delGroup(id)\n\n    return data\n  }\n)\n\nconst initialState : ProfileState = {\n  loadingStreams : false,\n  errorStreams : false,\n  streams : [],\n\n  user : null,\n  // user : { id : 17, groupId : '', myGroup : null, fromWhoms : [] },\n  userId : null,\n  loadingUser : true,\n  errorUser : false,\n}\n\nconst profileSlice = createSlice({\n  name : 'profile',\n  initialState,\n  reducers : {},\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestUser.pending, (state, action) => {\n        state.loadingUser = true\n        state.errorUser = false\n        state.userId = action.meta.arg\n      })\n      .addCase(requestUser.rejected, (state) => {\n        state.loadingUser = false\n        state.errorUser = true\n      })\n      .addCase(requestUser.fulfilled, (state, action) => {\n        state.loadingUser = false\n        state.errorUser = false\n        state.user = action.payload\n      })\n\n      .addCase(addGroup.pending, (state) => {\n        state.loadingUser = true\n        state.errorUser = false\n      })\n      .addCase(addGroup.rejected, (state) => {\n        state.loadingUser = false\n        state.errorUser = true\n      })\n      .addCase(addGroup.fulfilled, (state, action) => {\n        state.loadingUser = false\n        state.errorUser = false\n        state.user!.group = action.payload.group\n        state.user!.myGroup = action.payload.myGroup\n        state.user!.fromWhoms = action.payload.fromWhoms\n      })\n\n      .addCase(delGroup.pending, (state) => {\n        state.loadingUser = true\n        state.errorUser = false\n      })\n      .addCase(delGroup.rejected, (state) => {\n        state.loadingUser = false\n        state.errorUser = true\n      })\n      .addCase(delGroup.fulfilled, (state) => {\n        state.loadingUser = false\n        state.errorUser = false\n        state.user!.group = ''\n        state.user!.myGroup = null\n        state.user!.fromWhoms = []\n      })\n\n      .addCase(requestStreams.pending, (state) => {\n        state.loadingStreams = true\n        state.errorStreams = false\n      })\n      .addCase(requestStreams.rejected, (state) => {\n        state.loadingStreams = false\n        state.errorStreams = true\n      })\n      .addCase(requestStreams.fulfilled, (state, action) => {\n        state.loadingStreams = false\n        state.errorStreams = false\n        state.streams = action.payload\n      })\n  }\n})\n\nexport default profileSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\n\nimport navigation from './slices/navigation'\nimport search from './slices/search'\nimport schedule from './slices/schedule'\nimport profile from './slices/profile'\n\nconst rootReducer = combineReducers({\n  navigation,\n  search,\n  schedule,\n  profile,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\n\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({ reducer : rootReducer })\n\nexport default store","import React from 'react'\n\nimport bridge from '@vkontakte/vk-bridge'\nimport { Button, ConfigProvider, Epic, Link, Panel, Placeholder, ScreenSpinner, Tabbar, TabbarItem, View } from '@vkontakte/vkui'\nimport Icon28UserCircleOutline from \"@vkontakte/icons/dist/28/user_circle_outline\"\nimport Icon28GridSquareOutline from \"@vkontakte/icons/dist/28/grid_square_outline\"\nimport Icon28SnowflakeOutline from '@vkontakte/icons/dist/28/snowflake_outline'\n\nimport Schedule from './panels/Schedule'\nimport Profile from './panels/Profile'\nimport Map from './panels/Map'\nimport SearchPanel from './panels/Search'\nimport StaticsLesson from './components/StaticsLesson'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from './redux/rootReducer'\nimport { changePanel, changeStory } from './redux/slices/navigation'\nimport { SCHEDULE_PANEL, SCHEDULE_STORY, SEARCH_PANEL } from './constans'\nimport { requestStreams, requestUser } from './redux/slices/profile'\nimport { clearHistory } from './redux/slices/schedule'\n\nconst App : React.FC = () => {\n\t// const dispatch = useDispatch()\n\t// const { story, panels } = useSelector((s : RootState) => s.navigation)\n\t// const { loadingUser, errorUser, userId } = useSelector((s : RootState) => s.profile)\n\n\t// const changeActiveStory = (e : React.MouseEvent<HTMLDivElement>) => {\n\t// \tconst newStory = e.currentTarget.dataset.story\n\t// \tif(\n\t// \t\tnewStory === SCHEDULE_STORY &&\n\t// \t\tstory === SCHEDULE_STORY &&\n\t// \t\tpanels.schedule === SCHEDULE_PANEL\n\t// \t)\n\t// \t{\n\t// \t\tdispatch(changePanel({story:SCHEDULE_STORY, panel:SEARCH_PANEL}))\n\t// \t\tdispatch(clearHistory())\n\t// \t}\n\t// \telse if(newStory === story) return\n\t// \telse dispatch(changeStory(newStory))\n\t// }\n\n\t// React.useEffect(() => {\n\t// \tasync function init()\n\t// \t{\n\t// \t\tconst userData = await bridge.send('VKWebAppGetUserInfo')\n\t// \t\tdispatch(requestUser(userData.id))\n\t// \t}\n\n\t// \tinit()\n\t// },[])\n\n\t// if(errorUser)\n\t// \treturn (\n\t// \t\t<Placeholder\n\t// \t\t\taction={\n\t// \t\t\t\t<Button\n\t// \t\t\t\t\tmode=\"tertiary\"\n\t// \t\t\t\t\tonClick={() => dispatch(requestUser(userId as number))}\n\t// \t\t\t\t>Попробовать еще</Button>\n\t// \t\t\t}\n\t// \t\t\tstretched\n\t// \t\t\tclassName=\"placeholder-error\"\n\t// \t\t>\n\t// \t\t\t<Icon28SnowflakeOutline fill=\"#2975cc\" width={64} height={64} style={{margin:'0 auto'}}/>\n\t// \t\t\t<span>Произошла ошибка</span><br/>\n\t// \t\t\t<span>сайт БГТУ ушел на каникулы</span>\n\t// \t\t</Placeholder>\n\t// \t)\n\t\n\treturn(\n\t\t<ConfigProvider isWebView={true}>\n\t\t\t{/* <Epic\n\t\t\t\tactiveStory={story}\n\t\t\t\ttabbar={\n\t\t\t\t\t<Tabbar>\t\t\t\t\t\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={changeActiveStory}\n\t\t\t\t\t\t\tselected={story === 'schedule'}\n\t\t\t\t\t\t\tdata-story={'schedule'}\n\t\t\t\t\t\t\ttext=\"Расписание\"\n\t\t\t\t\t\t><Icon28GridSquareOutline/></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={changeActiveStory}\n\t\t\t\t\t\t\tselected={story === 'profile'}\n\t\t\t\t\t\t\tdata-story={'profile'}\n\t\t\t\t\t\t\ttext=\"Профиль\"\n\t\t\t\t\t\t><Icon28UserCircleOutline/></TabbarItem>\n\t\t\t\t\t</Tabbar>\n\t\t\t\t}\n\t\t\t> */}\n\t\t\t\t{/* <View\n\t\t\t\t\tid={'schedule'}\n\t\t\t\t\tactivePanel={panels.schedule}\n\t\t\t\t\tmodal={<StaticsLesson />}\n\t\t\t\t>\n\t\t\t\t\t<SearchPanel id='search' />\n\t\t\t\t\t<Schedule id='schedule' />\n\t\t\t\t</View>\n\t\t\t\t<View\n\t\t\t\t\tid={'profile'}\n\t\t\t\t\tactivePanel={panels.profile}\n\t\t\t\t\tpopout={loadingUser ? <ScreenSpinner /> : null}\n\t\t\t\t>\n\t\t\t\t\t<Profile id='profile' />\n\t\t\t\t\t<Map id='map' />\n\t\t\t\t</View>\t\t */}\n\t\t\t\t<View activePanel=\"panel\">\n\t\t\t\t\t<Panel id=\"panel\">\n\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\tstretched\n\t\t\t\t\t\t\taction={\n\t\t\t\t\t\t\t\t<Link href=\"https://vk.com/app7908078\">Новый адрес</Link>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>Приложение обновилось и располагается по-другому адресу</Placeholder>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t{/* </Epic> */}\n\t\t</ConfigProvider>\n\t)\n}\n\nexport default App","import React from 'react'\n\nimport { Placeholder, Link} from \"@vkontakte/vkui\"\nimport Icon28MoonOutline from \"@vkontakte/icons/dist/28/moon_outline\"\n\nconst Sleep = ({ }) => {\n  return(\n    <Placeholder\n      icon={<Icon28MoonOutline width={56} height={56} />}\n      action={\n        <>\n          <Link href={`http://www.bstu.ru/about/useful/schedule`}>Посмотреть расписание на сайте</Link>\n          <br /><br/>\n          <Link href={`https://vk.com/club198278031`}>Группа приложения</Link>        \n        </>\n      }\n      stretched\n    >\n      Приложение отдыхает<br/> с 23:00 до 07:00 каждого дня\n    </Placeholder>\n  )\n}\n\nexport default Sleep","import React from 'react'\n\nimport store from '../../redux/store'\nimport { Provider } from 'react-redux'\n\nimport App from '../../App'\nimport Sleep from '../../panels/Sleep'\n\nconst Switcher = () => {\n  const hours = new Date().getUTCHours()\n  \n  return (hours >= 20 || hours < 4) ? <Sleep /> : <Provider store={store}><App /></Provider>\n}\n\nexport default Switcher","import 'core-js/features/map'\nimport 'core-js/features/set'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport bridge from '@vkontakte/vk-bridge'\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport './index.sass'\nimport Switcher from './components/Switcher'\n\n// import eruda from 'eruda'\n// eruda.init()\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(<Switcher />, document.getElementById('root'))"],"sourceRoot":""}